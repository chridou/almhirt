  akka {
	loglevel = WARNING
  }
  almhirt {
	systemname = "almhirt-testing"
	bootstrapper { 
        class = "xxx" 
    }
	durations {
	  short = 500
	  medium = 2500
	  long = 10000
	  }
	eventlog {
       #disabled = true
	  	factory = "almhirt.ext.core.slick.eventlogs.SlickEventLogFactory"
	  	serializer_factory = "almhirt.ext.core.riftwarp.RiftWarpEventToStringSerializerFactory"
	  	maximum_direct_call_duration = 120 seconds
	  	channel = json
	  	storage_mode = text
	  	with_blobs_stored_separately = true
	  	min_blob_size_for_separation = 100
	  	profile = "h2"
	  	actorname = "slick-test-eventlog"
	  	connection = "jdbc:h2:mem:almhirtslicktest;DB_CLOSE_DELAY=-1"
	  	properties {
 		  user = "testuser"
  		  password = "testuser"
  		}
	  	eventlog_table = "SLICKEVENTLOG"
	  	blob_table = "SLICKEVENTBLOBS"
	  	create_schema = true
	  	drop_on_close = true
        log_domain_events = false
    }
    domaineventlog {
	  	factory = "almhirt.ext.core.slick.eventlogs.SlickDomainEventLogFactory"
	  	serializer_factory = "almhirt.ext.core.riftwarp.RiftWarpDomainEventToStringSerializerFactory"
	  	maximum_direct_call_duration = 120 seconds
	  	channel = json
	  	storage_mode = text
	  	with_blobs_stored_separately = true
	  	min_blob_size_for_separation = 100
	  	profile = "h2"
	  	actorname = "slick-test-domaineventlog"
	  	connection = "jdbc:h2:mem:almhirtslicktest;DB_CLOSE_DELAY=-1"
	  	properties {
 		  user = "testuser"
  		  password = "testuser"
  		}
	  	eventlog_table = "SLICKDOMAINEVENTLOG"
	  	blob_table = "SLICKDOMAINEVENTBLOBS"
	  	create_schema = true
	  	drop_on_close = true
	  }
      operationstate {
        factory = "almhirt.util.impl.OperationStateTrackerWithoutTimeoutFactory"
    }
  }
