package almhirt.httpx.spray.marshalling

import almhirt.httpx.spray.HasCommonMediaTypesProviders

trait HasCommonContentTypeProviders {
  implicit def booleanContentTypeProvider: FullContentTypeProvider[Boolean]
  implicit def stringContentTypeProvider: FullContentTypeProvider[String]
  implicit def byteContentTypeProvider: FullContentTypeProvider[Byte]
  implicit def shortContentTypeProvider: FullContentTypeProvider[Short]
  implicit def intContentTypeProvider: FullContentTypeProvider[Int]
  implicit def longContentTypeProvider: FullContentTypeProvider[Long]
  implicit def bigIntContentTypeProvider: FullContentTypeProvider[BigInt]
  implicit def floatContentTypeProvider: FullContentTypeProvider[Float]
  implicit def doubleContentTypeProvider: FullContentTypeProvider[Double]
  implicit def bigDecimalContentTypeProvider: FullContentTypeProvider[BigDecimal]
  implicit def uriWireContentTypeProvider: FullContentTypeProvider[java.net.URI]
  implicit def uuidWireContentTypeProvider: FullContentTypeProvider[java.util.UUID]
  implicit def localDateTimeContentTypeProvider: FullContentTypeProvider[org.joda.time.LocalDateTime]
  implicit def dateTimeContentTypeProvider: FullContentTypeProvider[org.joda.time.DateTime]
  implicit def finiteDurationTypeProvider: FullContentTypeProvider[scala.concurrent.duration.FiniteDuration]

  implicit def booleansContentTypeProvider: FullContentTypeProvider[Seq[Boolean]]
  implicit def stringsContentTypeProvider: FullContentTypeProvider[Seq[String]]
  implicit def bytesContentTypeProvider: FullContentTypeProvider[Seq[Byte]]
  implicit def shortsContentTypeProvider: FullContentTypeProvider[Seq[Short]]
  implicit def intsContentTypeProvider: FullContentTypeProvider[Seq[Int]]
  implicit def longsContentTypeProvider: FullContentTypeProvider[Seq[Long]]
  implicit def bigsIntContentTypeProvider: FullContentTypeProvider[Seq[BigInt]]
  implicit def floatsContentTypeProvider: FullContentTypeProvider[Seq[Float]]
  implicit def doublesContentTypeProvider: FullContentTypeProvider[Seq[Double]]
  implicit def bigsDecimalContentTypeProvider: FullContentTypeProvider[Seq[BigDecimal]]
  implicit def urisWireContentTypeProvider: FullContentTypeProvider[Seq[java.net.URI]]
  implicit def uuidsWireContentTypeProvider: FullContentTypeProvider[Seq[java.util.UUID]]
  implicit def localDateTimesContentTypeProvider: FullContentTypeProvider[Seq[org.joda.time.LocalDateTime]]
  implicit def dateTimesContentTypeProvider: FullContentTypeProvider[Seq[org.joda.time.DateTime]]
  implicit def finiteDurationsContentTypeProvider: FullContentTypeProvider[Seq[scala.concurrent.duration.FiniteDuration]]

  implicit def eventContentTypeProvider: FullContentTypeProvider[almhirt.common.Event]
  implicit def commandContentTypeProvider: FullContentTypeProvider[almhirt.common.Command]
  implicit def problemContentTypeProvider: FullContentTypeProvider[almhirt.common.Problem]

  implicit def eventsContentTypeProvider: FullContentTypeProvider[Seq[almhirt.common.Event]]
  implicit def commandsContentTypeProvider: FullContentTypeProvider[Seq[almhirt.common.Command]]
  implicit def problemsContentTypeProvider: FullContentTypeProvider[Seq[almhirt.common.Problem]]
}

trait EmptyCommonContentTypeProviders extends HasCommonContentTypeProviders {
  override val booleanContentTypeProvider = FullContentTypeProvider.empty[Boolean]
  override val stringContentTypeProvider = FullContentTypeProvider.empty[String]
  override val byteContentTypeProvider = FullContentTypeProvider.empty[Byte]
  override val shortContentTypeProvider = FullContentTypeProvider.empty[Short]
  override val intContentTypeProvider = FullContentTypeProvider.empty[Int]
  override val longContentTypeProvider = FullContentTypeProvider.empty[Long]
  override val bigIntContentTypeProvider = FullContentTypeProvider.empty[BigInt]
  override val floatContentTypeProvider = FullContentTypeProvider.empty[Float]
  override val doubleContentTypeProvider = FullContentTypeProvider.empty[Double]
  override val bigDecimalContentTypeProvider = FullContentTypeProvider.empty[BigDecimal]
  override val uriWireContentTypeProvider = FullContentTypeProvider.empty[java.net.URI]
  override val uuidWireContentTypeProvider = FullContentTypeProvider.empty[java.util.UUID]
  override val localDateTimeContentTypeProvider = FullContentTypeProvider.empty[org.joda.time.LocalDateTime]
  override val dateTimeContentTypeProvider = FullContentTypeProvider.empty[org.joda.time.DateTime]
  override val finiteDurationTypeProvider = FullContentTypeProvider.empty[scala.concurrent.duration.FiniteDuration]

  override val booleansContentTypeProvider = FullContentTypeProvider.empty[Seq[Boolean]]
  override val stringsContentTypeProvider = FullContentTypeProvider.empty[Seq[String]]
  override val bytesContentTypeProvider = FullContentTypeProvider.empty[Seq[Byte]]
  override val shortsContentTypeProvider = FullContentTypeProvider.empty[Seq[Short]]
  override val intsContentTypeProvider = FullContentTypeProvider.empty[Seq[Int]]
  override val longsContentTypeProvider = FullContentTypeProvider.empty[Seq[Long]]
  override val bigsIntContentTypeProvider = FullContentTypeProvider.empty[Seq[BigInt]]
  override val floatsContentTypeProvider = FullContentTypeProvider.empty[Seq[Float]]
  override val doublesContentTypeProvider = FullContentTypeProvider.empty[Seq[Double]]
  override val bigsDecimalContentTypeProvider = FullContentTypeProvider.empty[Seq[BigDecimal]]
  override val urisWireContentTypeProvider = FullContentTypeProvider.empty[Seq[java.net.URI]]
  override val uuidsWireContentTypeProvider = FullContentTypeProvider.empty[Seq[java.util.UUID]]
  override val localDateTimesContentTypeProvider = FullContentTypeProvider.empty[Seq[org.joda.time.LocalDateTime]]
  override val dateTimesContentTypeProvider = FullContentTypeProvider.empty[Seq[org.joda.time.DateTime]]
  override val finiteDurationsContentTypeProvider = FullContentTypeProvider.empty[Seq[scala.concurrent.duration.FiniteDuration]]

  override val eventContentTypeProvider = FullContentTypeProvider.empty[almhirt.common.Event]
  override val commandContentTypeProvider = FullContentTypeProvider.empty[almhirt.common.Command]
  override val problemContentTypeProvider = FullContentTypeProvider.empty[almhirt.common.Problem]

  override val eventsContentTypeProvider = FullContentTypeProvider.empty[Seq[almhirt.common.Event]]
  override val commandsContentTypeProvider = FullContentTypeProvider.empty[Seq[almhirt.common.Command]]
  override val problemsContentTypeProvider = FullContentTypeProvider.empty[Seq[almhirt.common.Problem]]
}

trait CommonContentTypeProvidersFromMediaTypes extends HasCommonContentTypeProviders { self: HasCommonMediaTypesProviders =>
  override val booleanContentTypeProvider = FullContentTypeProvider[Boolean]
  override val stringContentTypeProvider = FullContentTypeProvider[String]
  override val byteContentTypeProvider = FullContentTypeProvider[Byte]
  override val shortContentTypeProvider = FullContentTypeProvider[Short]
  override val intContentTypeProvider = FullContentTypeProvider[Int]
  override val longContentTypeProvider = FullContentTypeProvider[Long]
  override val bigIntContentTypeProvider = FullContentTypeProvider[BigInt]
  override val floatContentTypeProvider = FullContentTypeProvider[Float]
  override val doubleContentTypeProvider = FullContentTypeProvider[Double]
  override val bigDecimalContentTypeProvider = FullContentTypeProvider[BigDecimal]
  override val uriWireContentTypeProvider = FullContentTypeProvider[java.net.URI]
  override val uuidWireContentTypeProvider = FullContentTypeProvider[java.util.UUID]
  override val localDateTimeContentTypeProvider = FullContentTypeProvider[org.joda.time.LocalDateTime]
  override val dateTimeContentTypeProvider = FullContentTypeProvider[org.joda.time.DateTime]
  override val finiteDurationTypeProvider = FullContentTypeProvider[scala.concurrent.duration.FiniteDuration]

  override val booleansContentTypeProvider = FullContentTypeProvider[Seq[Boolean]]
  override val stringsContentTypeProvider = FullContentTypeProvider[Seq[String]]
  override val bytesContentTypeProvider = FullContentTypeProvider[Seq[Byte]]
  override val shortsContentTypeProvider = FullContentTypeProvider[Seq[Short]]
  override val intsContentTypeProvider = FullContentTypeProvider[Seq[Int]]
  override val longsContentTypeProvider = FullContentTypeProvider[Seq[Long]]
  override val bigsIntContentTypeProvider = FullContentTypeProvider[Seq[BigInt]]
  override val floatsContentTypeProvider = FullContentTypeProvider[Seq[Float]]
  override val doublesContentTypeProvider = FullContentTypeProvider[Seq[Double]]
  override val bigsDecimalContentTypeProvider = FullContentTypeProvider[Seq[BigDecimal]]
  override val urisWireContentTypeProvider = FullContentTypeProvider[Seq[java.net.URI]]
  override val uuidsWireContentTypeProvider = FullContentTypeProvider[Seq[java.util.UUID]]
  override val localDateTimesContentTypeProvider = FullContentTypeProvider[Seq[org.joda.time.LocalDateTime]]
  override val dateTimesContentTypeProvider = FullContentTypeProvider[Seq[org.joda.time.DateTime]]
  override val finiteDurationsContentTypeProvider = FullContentTypeProvider[Seq[scala.concurrent.duration.FiniteDuration]]

  override val eventContentTypeProvider = FullContentTypeProvider[almhirt.common.Event]
  override val commandContentTypeProvider = FullContentTypeProvider[almhirt.common.Command]
  override val problemContentTypeProvider = FullContentTypeProvider[almhirt.common.Problem]

  override val eventsContentTypeProvider = FullContentTypeProvider[Seq[almhirt.common.Event]]
  override val commandsContentTypeProvider = FullContentTypeProvider[Seq[almhirt.common.Command]]
  override val problemsContentTypeProvider = FullContentTypeProvider[Seq[almhirt.common.Problem]]
}